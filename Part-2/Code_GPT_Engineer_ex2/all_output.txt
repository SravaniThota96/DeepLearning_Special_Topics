The core files for this project will be:

1. `index.html`: This is the main HTML file that will contain the structure of the pomodoro timer app.
2. `styles.css`: This CSS file will contain all the styles for the pomodoro timer app.
3. `main.js`: This JavaScript file will contain all the logic for the pomodoro timer app.

Let's start with the `index.html` file:

index.html
```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pomodoro Timer</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div id="app">
        <h1>Pomodoro Timer</h1>
        <div id="timer">
            <span id="minutes">25</span>:<span id="seconds">00</span>
        </div>
        <div id="controls">
            <button id="start">Start</button>
            <button id="stop">Stop</button>
            <button id="reset">Reset</button>
        </div>
        <div id="settings">
            <label for="work-time">Work Time (minutes):</label>
            <input type="number" id="work-time" min="1" max="60" value="25">
            <label for="break-time">Break Time (minutes):</label>
            <input type="number" id="break-time" min="1" max="60" value="5">
        </div>
    </div>
    <script src="main.js"></script>
</body>
</html>
```

Next, the `styles.css` file:

styles.css
```css
body {
    font-family: Arial, sans-serif;
    text-align: center;
    background-color: #f5f5f5;
}

#app {
    max-width: 600px;
    margin: 0 auto;
    padding: 20px;
}

#timer {
    font-size: 48px;
    margin: 20px 0;
}

#controls, #settings {
    margin: 20px 0;
}

button {
    padding: 10px 20px;
    margin: 0 10px;
    font-size: 16px;
}

input[type="number"] {
    width: 50px;
    margin: 0 10px;
}
```

Finally, the `main.js` file:

main.js
```javascript
let workTime = 25;
let breakTime = 5;
let isWorking = true;
let isRunning = false;
let interval;

const minutesElement = document.getElementById('minutes');
const secondsElement = document.getElementById('seconds');
const startButton = document.getElementById('start');
const stopButton = document.getElementById('stop');
const resetButton = document.getElementById('reset');
const workTimeInput = document.getElementById('work-time');
const breakTimeInput = document.getElementById('break-time');

startButton.addEventListener('click', startTimer);
stopButton.addEventListener('click', stopTimer);
resetButton.addEventListener('click', resetTimer);
workTimeInput.addEventListener('change', updateWorkTime);
breakTimeInput.addEventListener('change', updateBreakTime);

function startTimer() {
    if (isRunning) return;
    isRunning = true;
    interval = setInterval(updateTimer, 1000);
}

function stopTimer() {
    if (!isRunning) return;
    isRunning = false;
    clearInterval(interval);
}

function resetTimer() {
    stopTimer();
    isWorking = true;
    minutesElement.textContent = workTime;
    secondsElement.textContent = '00';
}

function updateTimer() {
    let minutes = parseInt(minutesElement.textContent);
    let seconds = parseInt(secondsElement.textContent);

    seconds--;
    if (seconds < 0) {
        seconds = 59;
        minutes--;
    }

    if (minutes < 0) {
        isWorking = !isWorking;
        minutes = isWorking ? workTime : breakTime;
    }

    minutesElement.textContent = String(minutes).padStart(2, '0');
    secondsElement.textContent = String(seconds).padStart(2, '0');
}

function updateWorkTime() {
    workTime = parseInt(workTimeInput.value);
    if (isWorking) {
        minutesElement.textContent = workTime;
        secondsElement.textContent = '00';
    }
}

function updateBreakTime() {
    breakTime = parseInt(breakTimeInput.value);
    if (!isWorking) {
        minutesElement.textContent = breakTime;
        secondsElement.textContent = '00';
    }
}
```

This code should be fully functional and provide a basic pomodoro timer app. The user can start, stop, and reset the timer, and can also adjust the work and break times. The timer will automatically switch between work and break times when it reaches zero.